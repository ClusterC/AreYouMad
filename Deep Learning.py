from transformers import AutoModelForSequenceClassification, AutoTokenizer
import torch
import pytorch_lightning as pl
from torch.utils.data import Dataset, DataLoader

# โหลดโมเดลที่เทรนสำหรับภาษาไทย
MODEL_NAME = "airesearch/wangchanberta-base-att-spm-uncased"  # หรือใช้ "xlm-roberta-base"

tokenizer = AutoTokenizer.from_pretrained(MODEL_NAME)
#model = AutoModelForSequenceClassification.from_pretrained(MODEL_NAME, num_labels=4)  # 4 อารมณ์ Moved inside EmotionClassifier

# ตัวอย่างข้อความที่ติด Label แล้ว
labels = {"น้อยใจ": 0, "งอน": 1, "ประชด": 2, "ปกติ": 3}

data = [
    # ----------------------- น้อยใจ -----------------------
    ("ฉันไม่สำคัญหรอก", "น้อยใจ"),
    ("เธอคงไม่สนใจฉันอยู่แล้ว", "น้อยใจ"),
    ("ไม่เป็นไร ฉันชินแล้ว", "น้อยใจ"),
    ("ฉันก็แค่คนที่ไม่สำคัญ", "น้อยใจ"),
    ("จะทำอะไรก็ไม่ต้องบอกฉันก็ได้นะ", "น้อยใจ"),
    ("เธอลืมฉันไปแล้วใช่ไหม", "น้อยใจ"),
    ("ไม่มีฉันก็คงไม่เป็นไรหรอก", "น้อยใจ"),
    ("เธอไปสนใจคนอื่นเถอะ", "น้อยใจ"),
    ("ทำไมฉันต้องเป็นคนสุดท้ายที่รู้ตลอด", "น้อยใจ"),
    ("ฉันคงเป็นตัวเลือกที่ไม่สำคัญ", "น้อยใจ"),
    ("ไม่เป็นไร ฉันอยู่คนเดียวได้", "น้อยใจ"),
    ("ก็แค่ลืมฉันไปเหมือนเดิมแหละ", "น้อยใจ"),
    
    ("ทำไมเธอถึงไม่ตอบแชทฉันเลย", "น้อยใจ"),
    ("ขอโทษนะ ฉันยุ่งอยู่จริงๆ", "ปกติ"),
    ("อ๋อ งั้นก็ไม่เป็นไร ฉันคงไม่สำคัญอยู่แล้ว", "น้อยใจ"),
    ("ไม่ใช่แบบนั้นนะ!", "ปกติ"),

    # ----------------------- งอน -----------------------
    ("ทำอะไรก็ทำไปเลย ไม่สนแล้ว", "งอน"),
    ("ตามใจเธอเลย", "งอน"),
    ("ไม่ต้องมายุ่งกับฉันแล้ว", "งอน"),
    ("โอเค ไม่ต้องพูดอะไรแล้ว", "งอน"),
    ("ก็ดีนะ ฉันไม่ว่าอะไรอยู่แล้ว", "งอน"),
    ("เธอไม่ต้องมาพูดกับฉันอีก", "งอน"),
    ("ไม่เป็นไร ฉันโอเค (แต่ไม่จริง)", "งอน"),
    ("เธอจะไปไหนก็ไปเลย", "งอน"),
    ("อยากทำอะไรก็ทำไป", "งอน"),
    ("ก็ดีนะ ฉันไม่สำคัญอยู่แล้ว", "งอน"),
    ("เธอก็ไม่เคยสนใจฉันอยู่แล้ว", "งอน"),
    ("ฉันไม่พูดอะไรแล้ว", "งอน"),
    ("ฉันไม่ได้โกรธ แค่ไม่อยากพูดด้วย", "งอน"),
    
    ("วันนี้เธอลืมไปใช่ไหม", "งอน"),
    ("ลืมอะไรเหรอ?", "ปกติ"),
    ("ไม่เป็นไร เธอคงไม่ได้สนใจอยู่แล้ว", "งอน"),
    ("เฮ้ ฉันแค่จำไม่ได้ บอกหน่อยได้ไหม", "ปกติ"),
    
    # ----------------------- ประชด -----------------------
    ("สุดยอดเลยนะ เธอนี่ดีจริงๆ", "ประชด"),
    ("ว้าว เก่งมากเลยนะ", "ประชด"),
    ("ดีจังเลย ฉันชอบแบบนี้มาก", "ประชด"),
    ("โอ้โห ขอบคุณมากเลยนะ", "ประชด"),
    ("ดีใจจังเลย ที่เธอทำแบบนี้", "ประชด"),
    ("สุดยอดเลย ทำได้ดีมาก", "ประชด"),
    ("เธอนี่เป็นคนที่ดีที่สุดเลยนะ", "ประชด"),
    ("เธอวิเศษมากๆ เลย", "ประชด"),
    ("โอ้โห ฉันชอบมากเลยจริงๆ", "ประชด"),
    ("เธอนี่ช่วยฉันได้เยอะมากเลยนะ", "ประชด"),
    ("เก่งจังเลยอ่ะ", "ประชด"),
    ("ดีใจแทนเธอเลยนะ", "ประชด"),
    ("เธอนี่เป็นคนที่ดีมากๆ เลย", "ประชด"),
    
    ("เธอช่วยฉันหน่อยได้ไหม", "ปกติ"),
    ("ไม่ต้องหรอก ฉันรู้ว่าเธอเก่งอยู่แล้ว", "ประชด"),
    ("อย่าพูดแบบนั้นเลย ฉันต้องการความช่วยเหลือจริงๆ", "ปกติ"),
    ("โอ้โห สุดยอดเลยนะ ต้องการฉันแล้วสินะ", "ประชด"),

    # ----------------------- ปกติ -----------------------
    ("วันนี้อากาศดี", "ปกติ"),
    ("พรุ่งนี้ไปเที่ยวกันไหม", "ปกติ"),
    ("ฉันชอบฟังเพลงตอนทำงาน", "ปกติ"),
    ("เธอทำอะไรอยู่", "ปกติ"),
    ("ฉันกินข้าวแล้ว", "ปกติ"),
    ("พรุ่งนี้มีประชุมตอนเช้า", "ปกติ"),
    ("วันนี้ฉันเหนื่อยนิดหน่อย", "ปกติ"),
    ("ฝนตกหนักเลยวันนี้", "ปกติ"),
    ("วันหยุดนี้เธอมีแผนอะไรไหม", "ปกติ"),
    ("ฉันเพิ่งดูหนังเรื่องหนึ่ง สนุกมาก", "ปกติ"),
    ("เธอไปถึงที่นั่นกี่โมง", "ปกติ"),
    ("ฉันกำลังอ่านหนังสือ", "ปกติ"),
    ("เราควรไปกินข้าวด้วยกันบ้าง", "ปกติ"),
    ("วันนี้อากาศดีนะ", "ปกติ"),
    ("ใช่สิ ท้องฟ้าแจ่มใสเลย", "ปกติ"),
    ("ไปเดินเล่นกันไหม", "ปกติ"),
    ("ได้เลย! ไปกันเถอะ", "ปกติ"),
    
    ("สวัสดี", "ปกติ"),
    ("หวัดดี", "ปกติ"),
    ("ไง", "ปกติ"),
    ("โย่ว", "ปกติ"),
    ("เฮ้", "ปกติ"),
    ("อรุณสวัสดิ์", "ปกติ"),
    ("สวัสดีตอนเย็น", "ปกติ"),
    ("สบายดีไหม", "ปกติ"),
    ("เป็นไงบ้าง", "ปกติ"),
    ("ไม่ได้เจอกันนานเลยนะ", "ปกติ"),
    ("ไงเพื่อน", "ปกติ"),
    ("เป็นยังไงบ้างวันนี้", "ปกติ"),
    ("มาทำอะไรตรงนี้", "ปกติ"),
    ("ดีจ้า", "ปกติ"),
    ("โย่ว เป็นไงบ้าง", "ปกติ"),
    ("เฮ้ มีอะไรใหม่ๆบ้าง", "ปกติ"),
    ("อ้าว เจอกันอีกแล้ว", "ปกติ"),
    ("ไง สบายดีมั้ย", "ปกติ"),
    ("สวัสดีค่ะคุณครู", "ปกติ"),
    ("ไง พี่ชาย", "ปกติ"),
    ("ทักครับพี่!", "ปกติ"),
    ("สวัสดีค่ะคุณลูกค้า", "ปกติ"),
    ("เฮ้ น้องชาย วันนี้เรียนเป็นไงบ้าง", "ปกติ"),
    ("ไงพ่อหนุ่ม วันนี้ทำงานหนักไหม", "ปกติ"),
    
    #----------------------------------------------------
    ("เธอไปกับเพื่อนคนนั้นมาอีกแล้วใช่ไหม", "น้อยใจ"),
    ("ก็ใช่ แต่แค่ไปทำงานด้วยกัน", "ปกติ"),
    ("ไม่เป็นไร เธออยากทำอะไรก็ทำไปเถอะ", "งอน"),
    ("อย่าพูดแบบนั้นสิ ฉันไม่ได้คิดอะไร", "ปกติ"),
    ("ว้าว ดีจังเลยนะ เธอนี่สุดยอดจริงๆ", "ประชด"),
    ("เธอกำลังประชดฉันอยู่ใช่ไหม?", "ปกติ"),
    
    ("เธอยังกล้ามาทักฉันอีกเหรอ", "งอน"),
    ("อ๋อ สวัสดี! ไม่คิดว่าจะได้เจอกันอีก", "ประชด"),
    ("เหอะๆ ทักฉันทำไมเหรอ", "น้อยใจ"),
]


# แปลงเป็น Tensor
texts = [d[0] for d in data]
label_ids = [labels[d[1]] for d in data]

# Tokenize
encodings = tokenizer(texts, truncation=True, padding=True, return_tensors="pt")
labels_tensor = torch.tensor(label_ids)


# สร้าง Dataset สำหรับ PyTorch
class EmotionDataset(Dataset):
    def __init__(self, encodings, labels):
        self.encodings = encodings
        self.labels = labels

    def __len__(self):
        return len(self.labels)

    def __getitem__(self, idx):
        item = {key: val[idx] for key, val in self.encodings.items()}
        item["labels"] = self.labels[idx]
        return item


dataset = EmotionDataset(encodings, labels_tensor)
dataloader = DataLoader(dataset, batch_size=2, shuffle=True)


# โมเดล Fine-Tune
class EmotionClassifier(pl.LightningModule):
    def __init__(self, model_name):
        super().__init__()
        self.model = AutoModelForSequenceClassification.from_pretrained(
            model_name, num_labels=4
        )

    def training_step(self, batch, batch_idx):
        outputs = self.model(**batch)
        loss = outputs.loss
        return loss

    def configure_optimizers(self):
        return torch.optim.AdamW(self.parameters(), lr=5e-5)
    
    def forward(self, input_ids, attention_mask):
        outputs = self.model(input_ids=input_ids, attention_mask=attention_mask)
        return outputs


model = EmotionClassifier(MODEL_NAME)

# เทรนโมเดล
trainer = pl.Trainer(max_epochs=3, accelerator="auto")
trainer.fit(model, dataloader)


def predict(text):
    inputs = tokenizer(text, return_tensors="pt", truncation=True, padding=True)
    #outputs = model(**inputs) # original bug line
    outputs = model(input_ids=inputs['input_ids'], attention_mask=inputs['attention_mask'])
    probs = torch.nn.functional.softmax(outputs.logits, dim=-1)
    return {
        k: round(v.item() * 100, 2) for k, v in zip(labels.keys(), probs[0])
    }


print(predict("เออ ดีมากเลยนะ"))
print()
print(predict("สวัสดีครับ"))
print()
print(predict("ทำไมเธอถึงไม่ตอบแชทฉันเลย ขอโทษนะ ฉันยุ่งอยู่จริงๆ อ๋อ งั้นก็ไม่เป็นไร ฉันคงไม่สำคัญอยู่แล้ว ไม่ใช่แบบนั้นนะ! วันนี้เธอลืมไปใช่ไหม ลืมอะไรเหรอ?"))